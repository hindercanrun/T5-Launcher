<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIEAAAAEAGACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAABBQIBAwEBAgEBAgEBAgEBAgEBAwEBBAEBBgEABgEABAEAAwEAAwEABAEABAEABQEABgEABwEABwEA
        BgEABgIABwEBBwIBBgIBBgIBBgIBBgMBCAMBCgQBDQUCEgcDHQkAAwEAAgEAAgEAAgEAAgEAAgEAAwEA
        BAEABgEABQEABAEFCgYCBQIAAQEAAAAAAAAAAQAAAQEAAgEABQEFDAYCCAMABQEBBwIBBwIBBgIBBgMB
        BwMBCQMBDAUBEAYCFwcBAgEAAgEAAQEAAQEAAgEAAwEABAEABQEABQEAAQAfKh/f6N/AzL+dqp1+l35w
        fXFxenJ2j3iUpJSwwrDb6NtkeWQAAwEBBwIBBwIBBwIBBwMBCAMBCQMBDAUBDwYCFgcBAgEAAQEAAQEA
        AQEAAgEABAEABQEABgEAAwEEBgTFzsX////////////////////////////////////////9//0XJRgA
        BAEBCAIBCQMBCAMBCQMBCgQBDAUBDwYCFQYBAgEAAQEAAQEAAQEAAgEABAEABQEABgEAAwECBAK0w7b6
        /fr////////////////////////////////3/ff0+fQRHRMABAIBCQIBCgMBCgMBCgMBCwQBDAUBDwYC
        FAcBAgEAAQEAAQAAAQAAAgEABAEABQEABQEAAwAAAQCjsaObsJt8k3x1inaGmomhtqOnuaiMpI16kXyE
        nYVxkHXo8ekJEgoABQIBCgMBDAMBDAQBDAMBDAQBDQQBDwYCFAYBAQEAAQAAAQAAAQAAAgEAAwEABAEA
        BAEAAAALEQv5+vlPY1ICCgMAAgEABQIACgMACgMACAQABAIACwIXLxr///86Uz0ABAIBCwMBDQQBDgQB
        DgQBDQQBDgUBDwYCEwYBAQEAAQAAAQAAAQAAAgEAAwEABAEAAwEBAwKToZT///9LZ01YdFxTaVZiemd5
        l3yAmYRohm1WdltaeV47YEDi6eLj7OMMGw8ACQQBDwQBEQUBDwUBDgUBDgUBDwYCEwYBAQEAAQAAAQAA
        AQEAAgEAAwEABAEAAAAoNin///+bsJ5jgmb///////////////////////////////+dt6Fhimf///+E
        nogBCwQBEAQBEgUBEQUBEAUBDwYBEAYBEwYBAQEAAQAAAQAAAQEAAgAAAwEAAwEAAABkeGT///9hgWP8
        /fz9//38/fz////////////////8/fz8/fz///96pIHO4s/a5tsCFAYBEQQBFAUBEwUBEQUBEAYBEAYB
        EgYBAQEAAQAAAQAAAQEAAgEAAwEAAwEAAQAiMCR2lnmTrZf////8/fz9//3U5tg4dkgfYS+KvJb////9
        /f3////P4tJil2tbjGMAEgUCFAYCFgcCFQYBEgUBEQYBEAYBEgYBAQEAAQEAAQEAAgEAAgEAAwEAAwEA
        AQEWJRmXrpr9//38/fz//f3////f7OAHSRIAOQ+EvZP////////9/f3////I28s1bEABGgcAFQYCGAcC
        FgcCEwYBEQYBEQYBEgYBAgEAAQEAAQEAAgEAAgEAAgEBAwFNXU/5/Pf////////////////b8N/3/flb
        s3Afijb5/fna8d/8/fz///////////////+RuZkIKw4BFwcCGAcCFQcCEgYBEQYBEwYBAgEAAQEAAgEA
        AgEAAwEAAAA2Qzn////////////i8ONrrXohgjUTgifj9uj9//3z/PT///87s1YUkSlSt2e95sX/////
        //////+QupcBHAgCGgcCFwgCFAcCEwcBEwYBAgEAAgEAAgEAAgEAAwEAAgF+lIH///////+hwKgMSRYB
        SwwAYg5Ctlz///////////////+j5rEFlhUDhhIHfhZbum3////////j8eUHLw8BHQgCGggCFgcCFQcC
        FQYBAwEAAgEAAwEAAgEAAgEAAwJ+nYH////A18MGMw4BPgsCZA8amzHl+ej////9//3////9/f////9V
        2nAGqxcFlBUCeBBvxYH////m8+kJOhIBIgkCHwkCGgkCFwgCGAgBBAIAAwEAAwEFCgZDYUYABwN4j33/
        //8tZjoAKQ0JZhc7rVTb9OD////9//3////////////////9//105YkWvS8DkxMLihzw+vHd8d8HQRIC
        KgoCJAoCHwoCHAkCGwgBBQIBBAIAAQElNijw/+4BDgRBYEn///9AgU5hpHLR7Nf/////////////////
        ///////////////////////w/fGR5aM6ulPU89jC5cgETBEDOQ0DLwwCJwsCJAoCIQkBBgIBBgIAAgEp
        Oyz///8jQioADgZKfFb////////////////9/f/8/fz6/fz5/fn6/fz6/fr6/fz9//3/////////////
        //////+e2q0CXBAETREEPxADNQ4DLQwCKgsBCAMBCAMABgMHEwrV49Xg6+ATOhsAHQsXZChVsWxHwmJ2
        4I+X7qq69sPC98jS+dfY+d/R+dXf+uPJ+cy097m09r3D98iz9Ly988ZYyXIDdBQFZBUEUxMERRADOg8D
        NgwBCgQBCgQBCwQACQRylHj////X6NigxqgdeDABZw8AihJF0WPw/PD//f36/Pr//Pzz/PHY+trG98zO
        +dLG98zF98u69r+Z8aSJ7JckwD8FkBkGfhkFaxYEWBQEShEERQ8BDAQBCwQBDAQACgUkSSz/////////
        //////+X2Kc3wFQVxjEh2EBU6HD//f3//P3z/PPd+t2E85DO+dLU+djS+dfU+dW99sOX8acYzDQHqhwH
        lxsGhBkFcBYEXhMEVREBDQUBDQUBDgYBEAYCFgl1o37//////f33+fb////////d9+CN7qE841d87o//
        /f3l+ubU+dh884n//f3//f38/fz//////f3///874FYEvRkIrh8Hmh0GhhkFdhcEaRMBDwUCDgYCEAYC
        FAcBFwgCIQozekXL6M/////5+vn3+ff9/Pz//f36/PlW6Gw3400v5Ugp5T1+8Y3Y+tuP9JmN9Jaw97b9
        //3//f2a8acR0SoIvx4Irh4HnRsGjBoFfhYCEQYCEQcCEgcCFggCHAkDJQsALwoFUhFcuXH2/PT////3
        +vf2+vb8/Pz8/fxd6XEZ2ywj3ze698KX857x/fP8//yX9J7O+c///Pz///9h6HYGxhkJvR8Irh0HnhsG
        kBgCEgYCEgcCFAcCGAgCHwoBJgopdjlstn4ajC8oqD6Q36Dz+fP/+vz0+vT5/Pn//f3R99Xl+ujY+dqo
        9LH//f3////I98mw9LP//f3///9I4lwHyBgKxR4JuR4Iqx0HoBkCEgYCEwcCFQgCGQgDHwoDKAsHPxFo
        sXb9//265sJPyGROzmLA8Mb5+vf2+fT2+vb9/Pz//f3P9tKt87P////////L98yu87P////O+dIRziEK
        xhsKwxwJvx0IsR0HqhkCEwYCFAcCFggCGgkDIQoELQwEOQ0CRwwjjTbd89/////V89jL8M/x+fHz+fHz
        +fHz+fP5+vnO9M945oG988C/88KK7JOo8a7///872ksJwxUMwxsLwBsKvB0JtB0IrRkCFQYCFggCGQgD
        HQkDJAsELgwFOw4GTRECWw4XjSjI7Mv////3+ffu9/Du9/Dw+fHw+fDz+fPz+fG58b2x8baw8LOr8LD2
        /PST65oLwBYMvxoMvRoLvBsKuRsJtBsJsRgCFwcCFwgCGggDHwkDJQoELwwFOw4GTRAHYRMFbRESkCJ6
        0obg9uL//f38+vr3+vf3+ff5+vna9tr0+vP//f3///////+w7rQRwB4LuRgNuhoMtxoLthoLtBsKsRoK
        sRcCGAcCGQgDHAkDIQoEJwsEMAwFPA4GTRAHXRIIbRQHfBQGhhIYpChgzm+h5ai/7MPJ8cy/7sNr23Uu
        yTs1y0VBz1BCz1IRuR0LsxcNtBoMsxoMsRoLrhoKrhkKrhkKsBcDHggDHQgDHwkDJAkEKgoENAsFPgwG
        TQ8HXRAIbREJfBMKiBQIjxMIlBEKnhQOpRgQqhoOqxYMqhULqhQKqhIJqxIJqxELrRUMrRYMrRYLqxYL
        qhYLqxYKqxYKrRULsxQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>